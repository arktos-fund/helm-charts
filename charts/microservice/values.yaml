# Default values for microservice.

mode: microservice
replicaCount: 1

image:
  repository: rg.nl-ams.scw.cloud/arktos-venture/instruments
  tag: "1.0.0"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

livenessProbe: {}
  # httpGet:
  #   path: /healthz
  #   port: http
  # failureThreshold: 3
  # periodSeconds: 15
  # timeoutSeconds: 5

readinessProbe: {}
  # httpGet:
  #   path: /healthz
  #   port: http
  # failureThreshold: 3
  # periodSeconds: 10
  # timeoutSeconds: 5

service:
  type: ClusterIP
  ports:
    http: 8000
    grpc: 11000

# Mapping: https://www.getambassador.io/docs/emissary/latest/topics/using/intro-mappings/
# Regex: https://www.getambassador.io/docs/emissary/latest/topics/using/prefix_regex/
# Cors: https://www.getambassador.io/docs/emissary/latest/topics/using/cors/
# Headers: https://www.getambassador.io/docs/emissary/latest/topics/using/headers/headers/
ingress: []
  # - name: "string"
  #   values:
  #     method: GET
  #     hostname: "api.test.com"
  #     prefix: /v1
  #     prefix_regex: true
  #     regex_rewrite:
  #       pattern: "/foo/([0-9]*)/list"
  #       # substitution: "string" 
  #     add_request_headers:
  #       authorization: "Authorization Header for Bearer"
  #     timeout_ms: 4000
  #     idle_timeout_ms: 500000
  #     connect_timeout_ms: 2000
  #     cors:
  #       origins: http://foo.example,http://bar.example
  #       methods: POST, GET, OPTIONS
  #       headers: Content-Type
  #       credentials: true
  #       exposed_headers: X-Custom-Header
  #       max_age: "86400"
  #     docs:
  #       path: "string"
  #       url: "string"
  #       ignored: false
  #       display_name: "string"

env: []
  # - name: TSDB
  #   value: "INSTRUMENTS"
  # - name: API_DEBUG
  #   value: {{ .Values.secrets.debug }}
  # - name: API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: eod-api
  #       key: value

volumes: []
  # - name: nats
  #   secret:
  #     secretName: natscred

config:
  nats: false
  secret: {}
    # name: "config"
    # key: "microservice"

  # Create new secret
  logger:
    format: fmt
    level: info
  timeout: 3s
  data: {}
    # redis:
    #   hostname: redis
    #   port: 6379
    #   database: 8
    #   timeout: 1.5s
    # postgres:
    #   debug: false
    #   hostname: ext-postgres-data
    #   port: 5432
    #   database: eod
    #   schema: accounts
    #   username: user_rw_eod
    #   password: example
    #   ssl: "disable"
    #   timeout: 3s
    # services:
    #   companies:
    #     hostname: company
    #     port: 11000
    #     timeout: 3s

metrics:
  enabled: true

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 65

nodeSelector:
  kubernetes.io/arch: amd64
  kubernetes.io/os: linux

tolerations: []

affinity: {}