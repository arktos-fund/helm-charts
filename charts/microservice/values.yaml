# -- mode is the deployment mode (microservice/worker)
mode: microservice
# -- replicas is the number of replicas to deploy
replicaCount: 1

# -- image is the image to use for the job
image:
  repository: 946936475872.dkr.ecr.us-east-1.amazonaws.com/instruments
  tag: "1.0.0"
  pullPolicy: IfNotPresent

# -- imagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this Chart.
imagePullSecrets: []
  # - name: regcred
# -- nameOverride is an optional string to substitute for the full names of resources
nameOverride: ""
# -- fullnameOverride is an optional string to substitute for the full names of resources
fullnameOverride: ""

# -- serviceAccount configuration
serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: false
  # -- Annotations to add to the ServiceAccount
  annotations: {}
  # -- The name of the ServiceAccount to use.
  name: ""
  # -- Rules/RoleBinding to add to the ServiceAccount
  rules: []
    # - apiGroups: [""]
    #   resources: ["pods"]
    #   verbs: ["get", "list", "watch"]
    # - apiGroups: [""]
    #   resources: ["pods/log"]
    #   verbs: ["get"]

# -- podAnnotations is an optional list of annotations to add to the pod
podAnnotations: {}
  # downscaler/uptime: "Mon-Mon 00:00-12:00 UTC"
  # eks.amazonaws.com/role-arn: arn:aws:iam::012345678912:role/my-example-iam

# -- podSecurityContext is an optional security context to add to the pod
podSecurityContext: {}
  # fsGroup: 1000

# -- securityContext is an optional security context to add to the container
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

# -- livenessProbe is an optional liveness probe to add to the container
livenessProbe: {}
  # exec:
  #   command: ["/bin/grpc_health_probe", "-addr=:5000"]
  # initialDelaySeconds: 5

# -- readinessProbe is an optional readiness probe to add to the container
readinessProbe: {}
  # exec:
  #   command: ["/bin/grpc_health_probe", "-addr=:5000"]
  # initialDelaySeconds: 5

# -- service is the service configuration
service:
  type: ClusterIP
  ports:
    http: 8000
    grpc: 11000

# -- ingress is the ingress configuration
ingress: []
  # - name: internal
  #   annotations:
  #     alb.ingress.kubernetes.io/load-balancer-name: ingress-internal
  #     alb.ingress.kubernetes.io/backend-protocol-version: GRPC
  #     alb.ingress.kubernetes.io/scheme: internal
  #     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
  #     alb.ingress.kubernetes.io/healthcheck-port: 11000
  #     alb.ingress.kubernetes.io/healthcheck-path: /grpc.health.v1.Health/Check
  #     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
  #   hosts:
  #     - host: grpc.arktos.internal
  #       paths:
  #         - path: /instruments.v1.Instruments/*
  #           pathType: Prefix
  # - name: public
  #   annotations:
  #     alb.ingress.kubernetes.io/load-balancer-name: ingress-public
  #     alb.ingress.kubernetes.io/waf-acl-id: <redacted>
  #     alb.ingress.kubernetes.io/scheme: internet-facing
  #     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
  #     alb.ingress.kubernetes.io/healthcheck-path: /health
  #     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
  #     alb.ingress.kubernetes.io/auth-idp-cognito: '{"userPoolARN":"arn:aws:cognito-idp:us-east-1:xxx:userpool/xxx","userPoolClientID":"my-clientID","userPoolDomain":"my-domain"}'
  #     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:xxxxx:certificate/xxxxxxx
  #   hosts:
  #     - host: api.arktos.fund
  #       paths:
  #         - path: /
  #           pathType: Exact

# -- env is an optional list of environment variables to add to the container
env: []
  # - name: TSDB
  #   value: "INSTRUMENTS"
  # - name: API_DEBUG
  #   value: {{ .Values.secrets.debug }}
  # - name: API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: eod-api
  #       key: value

# -- volumes is an optional list of volumes to add to the container
volumes: []

# -- fluxcd is an optional configuration for fluxcd
fluxcd:
  enabled: true
  interval: 30m
  # semver: 2.0.x

# -- securityGroups is an optional configuration for AWS security groups
securityGroups:
  enabled: false
  # -- serviceAccountSelector is an optional matchLabels to select the service account
  serviceAccountSelector: {}
  # -- rules is an optional list of rules to add to the security group
  rules: []
    # - "sg-1234567890abcdef0"

# -- config is an optional configuration for the microservice
config:
  secret: {}
    # name: "config"
    # key: "microservice"

  # Create new secret
  logger:
    format: fmt
    level: info
  timeout: 3s
  data: {}
    # redis:
    #   hostname: redis
    #   port: 6379
    #   database: 8
    #   timeout: 1.5s
    # postgres:
    #   debug: false
    #   hostname: ext-postgres-data
    #   port: 5432
    #   database: eod
    #   schema: accounts
    #   username: user_rw_eod
    #   password: example
    #   ssl: "disable"
    #   timeout: 3s
    # services:
    #   companies:
    #     hostname: company
    #     port: 11000
    #     timeout: 3s

# -- metrics is an optional configuration for the microservice
metrics:
  enabled: true

# -- resources is an optional configuration for the microservice
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# -- autoscaling is an optional configuration for the microservice
autoscaling:
  enabled: true
  annotations: {}
    # downscaler/uptime: "Mon-Mon 00:00-12:00 UTC"
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 65

# -- nodeSelector is an optional configuration for the microservice
nodeSelector:
  kubernetes.io/os: linux

# -- tolerations is an optional configuration for the microservice
tolerations: []

# -- affinity is an optional configuration for the microservice
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
              - arm64
