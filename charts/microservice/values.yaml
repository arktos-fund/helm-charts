# Default values for microservice.

app:
  replicaCount: 1

  image:
    repository: rg.nl-ams.scw.cloud/arktos-venture/grpc-apis/company
    pullPolicy: IfNotPresent
    tag: "0.3.9"

  imagePullSecrets:
    - name: reg-internal
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  service:
    type: ClusterIP
    ports:
      http: 8000
      grpc: 11000

  ingress:
    enabled: false
    className: "kong"
    annotations: {}
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.arktos-consulting.cloud
        paths:
          - path: /grpc/v1/company
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  env: []
    # - name: API_DEBUG
    #   value: {{ .Values.app.secrets.debug }}
    # - name: API_KEY
    #   valueFrom:
    #     secretKeyRef:
    #       name: backend-user
    #       key: backend-username

  volumes: []
    # - name: config
    #   secret:
    #     secretName: config

  config:
    # Secret already exist
    secret: ""

    # Create new secret
    logger:
      format: fmt
      level: info
    timeout: 3s
    data: {}
      # redis:
      #   hostname: redis
      #   port: 6379
      #   database: 8
      #   timeout: 1.5s
      # tdengine:
      #   database: analysis
      #   username: root
      #   password: taosdata
      #   timeout: 5s
      # postgres:
      #   debug: false
      #   hostname: ext-postgres-data
      #   port: 5432
      #   database: eod
      #   schema: accounts
      #   username: user_rw_eod
      #   password: example
      #   ssl: "disable"
      #   timeout: 3s
      # services:
      #   companies:
      #     hostname: company
      #     port: 11000
      #     timeout: 3s

  metrics:
    enabled: true

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector:
    k8s.scaleway.com/pool-name: app
    kubernetes.io/arch: amd64
    kubernetes.io/os: linux

  tolerations: []

  affinity: {}

redis:
  enabled: false

  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 6.2.6-debian-10-r53
    pullSecrets: []
    debug: false
  
  architecture: replication
  auth:
    enabled: true
    sentinel: false
    existingSecret: ""
    existingSecretPasswordKey: ""

  master:
    persistence:
      enabled: false

    resources:
      limits: {}
      requests: {}
  
  replica:
    replicaCount: 0
    persistence:
      enabled: false
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 11
      targetCPU: ""
      targetMemory: ""

    resources:
      limits:
        cpu: 250m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 256Mi

  metrics:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/redis-exporter
      tag: 1.31.4-debian-10-r11
      pullPolicy: IfNotPresent
      pullSecrets: []

    resources:
      limits: {}
      requests: {}

  serviceAccount:
    create: false

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi