{{- if .Values.cronjob.enabled }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "workers.fullname" . }}-worker
  labels:
    {{- include "workers.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 2
  startingDeadlineSeconds: {{ .Values.cronjob.startingDeadlineSeconds | default 600 }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          {{- if .Values.global.serviceAccount.create -}}
          serviceAccountName: {{ include "workers.serviceAccountName" . }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.global.podSecurityContext | nindent 12 }}
          containers:
            - name: app
              securityContext:
                {{- toYaml .Values.global.securityContext | nindent 16 }}
              image: {{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag }}
              imagePullPolicy: {{ .Values.cronjob.image.pullPolicy }}
              env:
                {{- toYaml .Values.cronjob.environment | nindent 16 }}
              resources:
                {{- toYaml .Values.cronjob.resources | nindent 16 }}
          restartPolicy: Never
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}